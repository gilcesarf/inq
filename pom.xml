<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.inqwell</groupId>
  <artifactId>inq</artifactId>
  <packaging>jar</packaging>
  <version>1.2</version>
  <name>inq</name>
  <url>http://www.inqwell.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.build.timestamp.format>yyyyMMdd_HHmm</maven.build.timestamp.format>
    <buildNumber>${maven.build.timestamp}</buildNumber>
  </properties>

  <build>

    <directory>${project.basedir}/target</directory>
    <outputDirectory>${project.build.directory}/classes</outputDirectory>
    <finalName>${project.artifactId}-${project.version}</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>javacc</id>
            <goals>
              <goal>javacc</goal>
            </goals>
            <configuration>
              <isStatic>false</isStatic>
              <choiceAmbiguityCheck>1</choiceAmbiguityCheck>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors> 
            <descriptor>file:src/main/assembly/inq-jar.xml</descriptor>
            <descriptor>file:src/main/assembly/dependencies-jar.xml</descriptor>
            <descriptor>file:src/main/assembly/distro.xml</descriptor>
          </descriptors>
          <archive>
            <manifest>
              <mainClass>com.inqwell.any.parser.Inq</mainClass>
              <!--
              <addClasspath>true</addClasspath>
              See http://jira.codehaus.org/browse/MASSEMBLY-334
              and http://stackoverflow.com/questions/1074603/maven-assembly-plugin
              Work around this by unpacking the dependencies
              rather than packaging them as jars. See the
              assembly descriptor.
              -->
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>ChecksumDistro</id>
            <phase>package</phase>
            <configuration>
              <tasks>
                <checksum file="target/${project.artifactId}-${project.version}-dist.tar.gz"
                          forceOverwrite="yes" format="MD5SUM" fileext=".md5.txt"/>
                <checksum file="target/${project.artifactId}-${project.version}-dist.zip"
                          forceOverwrite="yes" format="MD5SUM" fileext=".md5.txt"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <!--
    <repository>
      Note: only 0.9.9 available here at the moment while
      the jline project itself is at 1.0
      <id>jline</id>
      <name>JLine Project Repository</name>
      <url>http://jline.sourceforge.net/m2repo</url>
    </repository>
    -->
    <repository>
      <id>inqwell-repo</id>
      <url>https://github.com/inqwell/mvn-repo/raw/master/releases</url>
      <name>Inqwell Hosted Artifacts</name>
    </repository>
    <repository>
      <id>inqwell-snapshot</id>
      <url>https://github.com/inqwell/mvn-repo/raw/master/snapshots</url>
      <name>Inqwell Hosted Artifacts (SNAPSHOT)</name>
    </repository>
  </repositories>


  <dependencies>
    <dependency>
      <groupId>javax.jms</groupId>
      <artifactId>jms</artifactId>
      <version>1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>tablelayout</groupId>
      <artifactId>TableLayout</artifactId>
      <version>20050920</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
      <version>1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.inqwell</groupId>
      <artifactId>jcalendar</artifactId>
      <version>1.3.3-inqwell-1.0</version>
      <!-- <version>1.3.3-inqwell-1.1-SNAPSHOT</version> -->
      <scope>compile</scope>
    </dependency>
    <!--
    Docking Frames Common depends on Core but
    specifying them both means they end up in
    our dependencies and runtime assemblies
    -->
    <!--
    <dependency>
      <groupId>org.dockingframes</groupId>
      <artifactId>docking-frames-common</artifactId>
      <version>1.1.1p5a</version>
    </dependency>
    <dependency>
      <groupId>org.dockingframes</groupId>
      <artifactId>docking-frames-core</artifactId>
      <version>1.1.1p5a</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.dockingframes</groupId>
      <artifactId>docking-frames</artifactId>
      <version>1.1.1p5c</version>
      <classifier>common</classifier>
    </dependency>
    <dependency>
      <groupId>org.dockingframes</groupId>
      <artifactId>docking-frames</artifactId>
      <version>1.1.1p5c</version>
      <classifier>core</classifier>
    </dependency>
  </dependencies>
</project>
